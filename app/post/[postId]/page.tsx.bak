import Post from "../../components/post/post"
import Navbar from "../../components/navbar/navbar"
import { promises as fs } from 'fs';

async function loadConfig(){
  return fs.readFile(process.cwd() + '/config.json', 'utf-8').then(content => JSON.parse(content));
}

export async function getStaticPaths() {
  // When this is true (in preview environments) don't
  // prerender any static pages
  // (faster builds, but slower initial page load)
  if (process.env.SKIP_BUILD_STATIC_GENERATION) {
    return {
      paths: [],
      fallback: 'blocking',
    }
  }
 
  // Call an external API endpoint to get posts
  const config = await fs.readFile(process.cwd() + '/config.json', 'utf-8').then(content => JSON.parse(content));
  const uri = config.apiServerURI + 'api/posts';
  const posts = await fetch(uri).then(res => res.json());
 
  // Get the paths we want to prerender based on posts
  // In production environments, prerender all pages
  // (slower builds, but faster initial page load)
  
  const paths = posts.map((post:any) => {
    console.log(post.postId)
    return {params: { postId: String(post.postId) },}
})
  
  // { fallback: false } means other routes should 404
  return { paths, fallback: false }
}


export default async function Page({ params } : any) {
let config = await loadConfig();
console.log("hey man it's me your params", params);
return (
    <div className={"PostPage"}>
        <Navbar />
        <Post apiServerURI={config.apiServerURI} postId={params.postId} />
    </div>
)
}


